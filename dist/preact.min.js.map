{"version":3,"sources":["../src/util.js","../src/h.js","../src/clone-element.js","../src/linked-state.js","../src/render-queue.js","../src/dom/index.js","../src/vdom/index.js","../src/dom/recycler.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/constants.js","../src/render.js"],"names":["props","i","undefined","obj","extend","p","key","split","length","slice","call","offset","x","value","empty","str","prop","c","children","arr","lastSimple","len","arguments","type","firstChild","falsey","String","_p","join","SHARED_TEMP_ARRAY","j","child","simple","isFunction","VNode","isString","push","attributes","h","nodeName","class","className","hashToClassName","vnode","clone","toArray","v","t","e","currentTarget","this","s","component","state","delve","eventPath","match","checked","path","p0","setState","_component$setState","enqueueRender","items","rerender","currentItems","itemsOffline","pop","node","Element","removeNode","parentNode","removeChild","name","style","cssText","old","NON_DIMENSION_PROPS","innerHTML","__html","l","_listeners","toLowerCase","substring","addEventListener","eventProxy","NON_BUBBLING_EVENTS","removeEventListener","isSvg","setProperty","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","options","event","getRawNodeAttributes","_componentConstructor","isFunctionalComponent","isNamedNode","normalizedNodeName","list","nodes","createNode","document","createElementNS","createElement","ensureNodeData","cleanNode","mounts","idiff","dom","context","mountAll","rootComponent","originalAttributes","buildFunctionalComponent","nodeType","createComment","getNodeType","nodeValue","recollectNodeTree","createTextNode","out","prevSvgMode","isSvgMode","childNodes","Text","innerDiffNode","diffAttributes","ref","ATTR_KEY","vchildren","vchild","keyed","originalChildren","childrenLen","vlen","_child","_component","__key","min","isSameNodeType","insertBefore","keyedLen","removeOrphanedChildren","unmountOnly","collectNode","attrs","setAccessor","_name","_name2","collectComponent","constructor","createComponent","Ctor","inst","components","nextBase","splice","b","componentWillMount","componentWillReceiveProps","prevContext","_disableRendering","opts","syncComponentUpdates","triggerComponentRender","renderComponent","__ref","previousState","prevState","previousContext","isUpdate","base","initialBase","initialChildComponent","previousProps","componentWillUpdate","prevProps","_dirty","skip","render","rendered","getChildContext","toUnmount","childComponent","prototype","childProps","getNodeProps","_parentComponent","setComponentProps","cbase","diff","baseParent","replaceChild","unmountComponent","componentRef","unshift","diffLevel","flushMounts","componentDidUpdate","fn","cb","_renderCallbacks","isOwner","isDirectOwner","oldDom","componentWillUnmount","inner","remove","componentDidUnmount","_linkedStates","getInitialState","lcCache","defer","resolved","f","then","Symbol","for","boxFlex","boxFlexGroup","columnCount","fillOpacity","flex","flexGrow","opacity","order","orphans","strokeOpacity","widows","zIndex","zoom","blur","error","focus","load","resize","scroll","callback","exports","Component"],"mappings":"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","file":"preact.min.js","sourcesContent":["/** Copy own-properties from `props` onto `obj`.\n *\t@returns obj\n *\t@private\n */\nexport function extend(obj, props) {\n\tif (props) {\n\t\tfor (let i in props) {\n\t\t\tif (props[i]!==undefined) {\n\t\t\t\tobj[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n/** Fast clone. Note: does not filter out non-own properties.\n *\t@see https://esbench.com/bench/56baa34f45df6895002e03b6\n */\nexport function clone(obj) {\n\treturn extend({}, obj);\n}\n\n\n/** Get a deep property value from the given object, expressed in dot-notation.\n *\t@private\n */\nexport function delve(obj, key) {\n\tfor (let p=key.split('.'), i=0; i<p.length && obj; i++) {\n\t\tobj = obj[p[i]];\n\t}\n\treturn obj;\n}\n\n\n/** Convert an Array-like object to an Array\n *\t@private\n */\nexport function toArray(obj, offset) {\n\treturn [].slice.call(obj, offset);\n}\n\n\n/** @private is the given object a Function? */\nexport function isFunction(obj) {\n\treturn 'function'===typeof obj;\n}\n\n\n/** @private is the given object a String? */\nexport function isString(obj) {\n\treturn 'string'===typeof obj;\n}\n\n\n/** Check if a value is `null` or `undefined`.\n *\t@private\n */\nexport function empty(x) {\n\treturn x===undefined || x===null;\n}\n\n\n/** Check if a value is `null`, `undefined`, or explicitly `false`. */\nexport function falsey(value) {\n\treturn value===false || empty(value);\n}\n\n\n/** Convert a hashmap of CSS classes to a space-delimited className string\n *\t@private\n */\nexport function hashToClassName(c) {\n\tlet str = '';\n\tfor (let prop in c) {\n\t\tif (c[prop]) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += prop;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n/** Just a memoized String#toLowerCase */\nlet lcCache = {};\nexport const toLowerCase = s => lcCache[s] || (lcCache[s] = s.toLowerCase());\n\n\n/** Call a function asynchronously, as soon as possible.\n *\t@param {Function} callback\n */\nlet resolved = typeof Promise!=='undefined' && Promise.resolve();\nexport const defer = resolved ? (f => { resolved.then(f); }) : setTimeout;\n","import { VNode } from './vnode';\nimport options from './options';\nimport { falsey, isFunction, isString, hashToClassName } from './util';\n\n\nconst SHARED_TEMP_ARRAY = [];\n\n\n/** JSX/hyperscript reviver\n *\t@see http://jasonformat.com/wtf-is-jsx\n *\t@public\n *  @example\n *  /** @jsx h *\\/\n *  import { render, h } from 'preact';\n *  render(<span>foo</span>, document.body);\n */\nexport function h(nodeName, attributes, firstChild) {\n\tlet len = arguments.length,\n\t\tchildren, arr, lastSimple;\n\n\n\tif (len>2) {\n\t\tlet type = typeof firstChild;\n\t\tif (len===3 && type!=='object' && type!=='function') {\n\t\t\tif (!falsey(firstChild)) {\n\t\t\t\tchildren = [String(firstChild)];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tchildren = [];\n\t\t\tfor (let i=2; i<len; i++) {\n\t\t\t\tlet p = arguments[i];\n\t\t\t\tif (falsey(p)) continue;\n\t\t\t\tif (p.join) arr = p;\n\t\t\t\telse (arr = SHARED_TEMP_ARRAY)[0] = p;\n\t\t\t\tfor (let j=0; j<arr.length; j++) {\n\t\t\t\t\tlet child = arr[j],\n\t\t\t\t\t\tsimple = !(falsey(child) || isFunction(child) || child instanceof VNode);\n\t\t\t\t\tif (simple && !isString(child)) child = String(child);\n\t\t\t\t\tif (simple && lastSimple) {\n\t\t\t\t\t\tchildren[children.length-1] += child;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!falsey(child)) {\n\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\tlastSimple = simple;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (attributes && attributes.children) {\n\t\treturn h(nodeName, attributes, attributes.children);\n\t}\n\n\tif (attributes) {\n\t\tif (attributes.children) {\n\t\t\tdelete attributes.children;\n\t\t}\n\n\t\tif (!isFunction(nodeName)) {\n\t\t\t// normalize className to class.\n\t\t\tif ('className' in attributes) {\n\t\t\t\tattributes.class = attributes.className;\n\t\t\t\tdelete attributes.className;\n\t\t\t}\n\n\t\t\tlastSimple = attributes.class;\n\t\t\tif (lastSimple && !isString(lastSimple)) {\n\t\t\t\tattributes.class = hashToClassName(lastSimple);\n\t\t\t}\n\t\t}\n\t}\n\n\tlet p = new VNode(nodeName, attributes || undefined, children);\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode) options.vnode(p);\n\n\treturn p;\n}\n","import { clone, extend, toArray } from './util';\nimport { h } from './h';\n\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(clone(vnode.attributes), props),\n\t\targuments.length>2 ? toArray(arguments, 2) : vnode.children\n\t);\n}\n","import { isString, delve } from './util';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n *\t@private\n */\nexport function createLinkedState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tp0 = path[0];\n\treturn function(e) {\n\t\tlet t = e && e.currentTarget || this,\n\t\t\ts = component.state,\n\t\t\tobj = s,\n\t\t\tv, i;\n\t\tif (isString(eventPath)) {\n\t\t\tv = delve(e, eventPath);\n\t\t}\n\t\telse {\n\t\t\tv = t.nodeName ? ((t.nodeName+t.type).match(/^input(check|rad)/i) ? t.checked : t.value) : e;\n\t\t}\n\t\tif (path.length>1) {\n\t\t\tfor (i=0; i<path.length-1; i++) {\n\t\t\t\tobj = obj[path[i]] || (obj[path[i]] = {});\n\t\t\t}\n\t\t\tobj[path[i]] = v;\n\t\t\tv = s[p0];\n\t\t}\n\t\tcomponent.setState({ [p0]: v });\n\t};\n}\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/** Managed queue of dirty components to be re-rendered */\n\n// items/itemsOffline swap on each rerender() call (just a simple pool technique)\nlet items = [],\n\titemsOffline = [];\n\nexport function enqueueRender(component) {\n\tif (items.push(component)!==1) return;\n\n\t(options.debounceRendering || defer)(rerender);\n}\n\n\nexport function rerender() {\n\tif (!items.length) return;\n\n\tlet currentItems = items,\n\t\tp;\n\n\t// swap online & offline\n\titems = itemsOffline;\n\titemsOffline = currentItems;\n\n\twhile ( (p = currentItems.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { ATTR_KEY, NON_DIMENSION_PROPS, NON_BUBBLING_EVENTS } from '../constants';\nimport options from '../options';\nimport { toLowerCase, empty, falsey, isString, isFunction } from '../util';\n\n\nexport function ensureNodeData(node, data) {\n\treturn node[ATTR_KEY] || (node[ATTR_KEY] = (data || {}));\n}\n\n\nexport function getNodeType(node) {\n\tif (node instanceof Text) return 3;\n\tif (node instanceof Element) return 1;\n\treturn 0;\n}\n\n\n/** Removes a given DOM Node from its parent. */\nexport function removeNode(node) {\n\tlet p = node.parentNode;\n\tif (p) p.removeChild(node);\n}\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} value\t\tAn attribute value, such as a function to be used as an event handler\n *\t@param {any} previousValue\tThe last value that was set for this name/node pair\n *\t@private\n */\nexport function setAccessor(node, name, value, old, isSvg) {\n\tensureNodeData(node)[name] = value;\n\n\tif (name==='key' || name==='children' || name==='innerHTML') return;\n\n\tif (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || isString(value) || isString(old)) {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (!isString(old)) {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && !NON_DIMENSION_PROPS[i] ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html;\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet l = node._listeners || (node._listeners = {});\n\t\tname = toLowerCase(name.substring(2));\n\t\t// @TODO: this might be worth it later, un-breaks focus/blur bubbling in IE9:\n\t\t// if (node.attachEvent) name = name=='focus'?'focusin':name=='blur'?'focusout':name;\n\t\tif (value) {\n\t\t\tif (!l[name]) node.addEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);\n\t\t}\n\t\telse if (l[name]) {\n\t\t\tnode.removeEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);\n\t\t}\n\t\tl[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, empty(value) ? '' : value);\n\t\tif (falsey(value)) node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && name.match(/^xlink\\:?(.+)/);\n\t\tif (falsey(value)) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]));\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='object' && !isFunction(value)) {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) { }\n}\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Get a node's attributes as a hashmap.\n *\t@private\n */\nexport function getRawNodeAttributes(node) {\n\tlet attrs = {};\n\tfor (let i=node.attributes.length; i--; ) {\n\t\tattrs[node.attributes[i].name] = node.attributes[i].value;\n\t}\n\treturn attrs;\n}\n","import { clone, extend, isString, isFunction, toLowerCase } from '../util';\nimport { isFunctionalComponent } from './functional-component';\nimport { getNodeType } from '../dom/index';\n\n\n/** Check if two nodes are equivalent.\n *\t@param {Element} node\n *\t@param {VNode} vnode\n *\t@private\n */\nexport function isSameNodeType(node, vnode) {\n\tif (isString(vnode)) {\n\t\treturn getNodeType(node)===3;\n\t}\n\tif (isString(vnode.nodeName)) {\n\t\treturn isNamedNode(node, vnode.nodeName);\n\t}\n\tif (isFunction(vnode.nodeName)) {\n\t\treturn node._componentConstructor===vnode.nodeName || isFunctionalComponent(vnode);\n\t}\n}\n\n\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || toLowerCase(node.nodeName)===toLowerCase(nodeName);\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet defaultProps = vnode.nodeName.defaultProps,\n\t\tprops = clone(defaultProps || vnode.attributes);\n\n\tif (defaultProps) extend(props, vnode.attributes);\n\n\tif (vnode.children) props.children = vnode.children;\n\n\treturn props;\n}\n","import { toLowerCase } from '../util';\nimport { ensureNodeData, getNodeType, getRawNodeAttributes, removeNode } from './index';\n\n/** DOM node pool, keyed on nodeName. */\n\nconst nodes = {};\n\nexport function collectNode(node) {\n\tremoveNode(node);\n\tif (getNodeType(node)!==1) return;\n\tcleanNode(node);\n\tlet name = toLowerCase(node.nodeName),\n\t\tlist = nodes[name];\n\tif (list) list.push(node);\n\telse nodes[name] = [node];\n}\n\n\nexport function createNode(nodeName, isSvg) {\n\tlet name = toLowerCase(nodeName),\n\t\tnode = nodes[name] && nodes[name].pop() || (isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName));\n\tensureNodeData(node);\n\tnode.normalizedNodeName = name;\n\treturn node;\n}\n\n\nfunction cleanNode(node) {\n\t// When reclaiming externally created nodes, seed the attribute cache: (Issue #97)\n\n\tensureNodeData(node, getRawNodeAttributes(node));\n\n\tnode._component = node._componentConstructor = null;\n\n\t// if (node.childNodes.length>0) {\n\t// \tconsole.trace(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\n\t// \tfor (let i=node.childNodes.length; i--; ) collectNode(node.childNodes[i]);\n\t// }\n}\n","import { ATTR_KEY } from '../constants';\nimport { empty, isString, isFunction } from '../util';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { isFunctionalComponent, buildFunctionalComponent } from './functional-component';\nimport { buildComponentFromVNode } from './component';\nimport { setAccessor, getRawNodeAttributes, getNodeType } from '../dom/index';\nimport { createNode, collectNode } from '../dom/recycler';\nimport { unmountComponent } from './component';\n\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\nlet isSvgMode = false;\n\n\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, rootComponent) {\n\tdiffLevel++;\n\tlet ret = idiff(dom, vnode, context, mountAll, rootComponent);\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\tif (!--diffLevel) flushMounts();\n\treturn ret;\n}\n\n\nfunction idiff(dom, vnode, context, mountAll, rootComponent) {\n\tlet originalAttributes = vnode && vnode.attributes;\n\n\twhile (isFunctionalComponent(vnode)) {\n\t\tvnode = buildFunctionalComponent(vnode, context);\n\t}\n\n\tif (empty(vnode)) {\n\t\tvnode = '';\n\t\tif (rootComponent) {\n\t\t\tif (dom) {\n\t\t\t\tif (dom.nodeType===8) return dom;\n\t\t\t\trecollectNodeTree(dom);\n\t\t\t}\n\t\t\treturn document.createComment(vnode);\n\t\t}\n\t}\n\n\tif (isString(vnode)) {\n\t\tif (dom) {\n\t\t\tif (getNodeType(dom)===3 && dom.parentNode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t\treturn dom;\n\t\t\t}\n\t\t\trecollectNodeTree(dom);\n\t\t}\n\t\treturn document.createTextNode(vnode);\n\t}\n\n\tlet out = dom,\n\t\tnodeName = vnode.nodeName,\n\t\tprevSvgMode = isSvgMode;\n\n\tif (isFunction(nodeName)) {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\tif (!isString(nodeName)) {\n\t\tnodeName = String(nodeName);\n\t}\n\n\tisSvgMode = nodeName==='svg' ? true : nodeName==='foreignObject' ? false : isSvgMode;\n\n\tif (!dom) {\n\t\tout = createNode(nodeName, isSvgMode);\n\t}\n\telse if (!isNamedNode(dom, nodeName)) {\n\t\tout = createNode(nodeName, isSvgMode);\n\t\t// move children into the replacement node\n\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\t\t// reclaim element nodes\n\t\trecollectNodeTree(dom);\n\t}\n\n\t// fast-path for elements containing a single TextNode:\n\tif (vnode.children && vnode.children.length===1 && typeof vnode.children[0]==='string' && out.childNodes.length===1 && out.firstChild instanceof Text) {\n\t\tout.firstChild.nodeValue = vnode.children[0];\n\t}\n\telse if (vnode.children || out.firstChild) {\n\t\tinnerDiffNode(out, vnode.children, context, mountAll);\n\t}\n\n\tdiffAttributes(out, vnode.attributes);\n\n\tif (originalAttributes && originalAttributes.ref) {\n\t\t(out[ATTR_KEY].ref = originalAttributes.ref)(out);\n\t}\n\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM. */\nfunction innerDiffNode(dom, vchildren, context, mountAll) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren && vchildren.length,\n\t\tj, c, vchild, child;\n\n\tif (len) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tkey = vlen ? ((c = child._component) ? c.__key : (c = child[ATTR_KEY]) ? c.key : null) : null;\n\t\t\tif (key || key===0) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t// }\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (!empty(key)) {\n\t\t\t\tif (keyedLen && key in keyed) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tc = children[j];\n\t\t\t\t\tif (c && isSameNodeType(c, vchild)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!child && min<childrenLen && isFunction(vchild.nodeName) && mountAll) {\n\t\t\t\t\tchild = children[min];\n\t\t\t\t\tchildren[min++] = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tif (child!==originalChildren[i]) {\n\t\t\t\tdom.insertBefore(child, originalChildren[i] || null);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (keyedLen) {\n\t\t/*eslint guard-for-in:0*/\n\t\tfor (let i in keyed) if (keyed[i]) {\n\t\t\tchildren[min=childrenLen++] = keyed[i];\n\t\t}\n\t}\n\n\t// remove orphaned children\n\tif (min<childrenLen) {\n\t\tremoveOrphanedChildren(children);\n\t}\n}\n\n\n/** Reclaim children that were unreferenced in the desired VTree */\nexport function removeOrphanedChildren(children, unmountOnly) {\n\tfor (let i=children.length; i--; ) {\n\t\tlet child = children[i];\n\t\tif (child) {\n\t\t\trecollectNodeTree(child, unmountOnly);\n\t\t}\n\t}\n}\n\n\n/** Reclaim an entire tree of nodes, starting at the root. */\nexport function recollectNodeTree(node, unmountOnly) {\n\t// @TODO: Need to make a call on whether Preact should remove nodes not created by itself.\n\t// Currently it *does* remove them. Discussion: https://github.com/developit/preact/issues/39\n\t//if (!node[ATTR_KEY]) return;\n\n\tlet component = node._component;\n\tif (component) {\n\t\tunmountComponent(component, !unmountOnly);\n\t}\n\telse {\n\t\tif (node[ATTR_KEY] && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (!unmountOnly) {\n\t\t\tcollectNode(node);\n\t\t}\n\n\t\tif (node.childNodes && node.childNodes.length) {\n\t\t\tremoveOrphanedChildren(node.childNodes, unmountOnly);\n\t\t}\n\t}\n}\n\n\n/** Apply differences in attributes from a VNode to the given DOM Node. */\nfunction diffAttributes(dom, attrs) {\n\tlet old = dom[ATTR_KEY] || getRawNodeAttributes(dom);\n\n\t// removeAttributes(dom, old, attrs || EMPTY);\n\tfor (let name in old) {\n\t\tif (!attrs || !(name in attrs)) {\n\t\t\tsetAccessor(dom, name, null, old[name], isSvgMode);\n\t\t}\n\t}\n\n\t// new & updated\n\tif (attrs) {\n\t\tfor (let name in attrs) {\n\t\t\tif (!(name in old) || attrs[name]!=old[name] || ((name==='value' || name==='checked') && attrs[name]!=dom[name])) {\n\t\t\t\tsetAccessor(dom, name, attrs[name], old[name], isSvgMode);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {};\n\n\nexport function collectComponent(component) {\n\tlet name = component.constructor.name,\n\t\tlist = components[name];\n\tif (list) list.push(component);\n\telse components[name] = [component];\n}\n\n\nexport function createComponent(Ctor, props, context) {\n\tlet inst = new Ctor(props, context),\n\t\tlist = components[Ctor.name];\n\tinst.props = props;\n\tinst.context = context;\n\tif (list) {\n\t\tfor (let i=list.length; i--; ) {\n\t\t\tif (list[i].constructor===Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { isFunction, clone, extend, empty } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, removeOrphanedChildren, recollectNodeTree } from './diff';\nimport { isFunctionalComponent, buildFunctionalComponent } from './functional-component';\nimport { createComponent, collectComponent } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n\n/** Mark component as dirty and queue up a render.\n *\t@param {Component} component\n *\t@private\n */\nexport function triggerComponentRender(component) {\n\tif (!component._dirty) {\n\t\tcomponent._dirty = true;\n\t\tenqueueRender(component);\n\t}\n}\n\n\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n\tlet b = component.base;\n\tif (component._disableRendering) return;\n\tcomponent._disableRendering = true;\n\n\tif ((component.__ref = props.ref)) delete props.ref;\n\tif ((component.__key = props.key)) delete props.key;\n\n\tif (empty(b) || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t}\n\telse if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disableRendering = false;\n\n\tif (opts!==NO_RENDER) {\n\t\tif (opts===SYNC_RENDER || options.syncComponentUpdates!==false || !b) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\ttriggerComponentRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll) {\n\tif (component._disableRendering) return;\n\n\tlet skip, rendered,\n\t\tprops = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tinitialBase = isUpdate || component.nextBase,\n\t\tinitialChildComponent = component._component;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\tif (component.render) rendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(clone(context), component.getChildContext());\n\t\t}\n\n\t\twhile (isFunctionalComponent(rendered)) {\n\t\t\trendered = buildFunctionalComponent(rendered, context);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (isFunction(childComponent) && childComponent.prototype.render) {\n\t\t\t// set up high order component link\n\n\t\t\tlet inst = initialChildComponent,\n\t\t\t\tchildProps = getNodeProps(rendered);\n\n\t\t\tif (inst && inst.constructor===childComponent) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\t\t\t\tinst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || mountAll && initialBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tcomponent._component = inst;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context);\n\t\t\t\trenderComponent(inst, SYNC_RENDER);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tlet cbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\t\t\t}\n\n\t\t\tif (!toUnmount && component._parentComponent) {\n\t\t\t\tinitialBase._component = null;\n\t\t\t\trecollectNodeTree(initialBase);\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount, base!==initialBase);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) { componentRef = t; }\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t\tif (!diffLevel) flushMounts();\n\t}\n\telse if (!skip && component.componentDidUpdate) {\n\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t}\n\n\tlet cb = component._renderCallbacks, fn;\n\tif (cb) while ( (fn = cb.pop()) ) fn.call(component);\n\n\treturn rendered;\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (c && !isDirectOwner) {\n\t\t\tunmountComponent(c, true);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) c.nextBase = dom;\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component, remove) {\n\t// console.log(`${remove?'Removing':'Unmounting'} component: ${component.constructor.name}`);\n\tlet base = component.base;\n\n\tcomponent._disableRendering = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner, remove);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tif (remove) {\n\t\t\tremoveNode(base);\n\t\t\tcollectComponent(component);\n\t\t}\n\t\tremoveOrphanedChildren(base.childNodes, !remove);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n\tif (component.componentDidUnmount) component.componentDidUnmount();\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend, clone, isFunction } from './util';\nimport { createLinkedState } from './linked-state';\nimport { triggerComponentRender, renderComponent } from './vdom/component';\n\n/** Base Component class, for he ES6 Class method of creating Components\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport function Component(props, context) {\n\t/** @private */\n\tthis._dirty = true;\n\t/** @public */\n\tthis._disableRendering = false;\n\t/** @public */\n\tthis.prevState = this.prevProps = this.prevContext = this.base = this.nextBase = this._parentComponent = this._component = this.__ref = this.__key = this._linkedStates = this._renderCallbacks = null;\n\t/** @public */\n\tthis.context = context;\n\t/** @type {object} */\n\tthis.props = props;\n\t/** @type {object} */\n\tthis.state = this.getInitialState && this.getInitialState() || {};\n}\n\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} nextProps\n\t *\t@param {object} nextState\n\t *\t@param {object} nextContext\n\t *\t@returns {Boolean} should the component re-render\n\t *\t@name shouldComponentUpdate\n\t *\t@function\n\t */\n\t// shouldComponentUpdate() {\n\t// \treturn true;\n\t// },\n\n\n\t/** Returns a function that sets a state property when called.\n\t *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t *\n\t *\tProvides some built-in special cases:\n\t *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t *\t\t- Inputs automatically link their `value` property\n\t *\t\t- Event paths fall back to any associated Component if not found on an element\n\t *\t\t- If linked value is a function, will invoke it and use the result\n\t *\n\t *\t@param {string} key\t\t\t\tThe path to set - can be a dot-notated deep key\n\t *\t@param {string} [eventPath]\t\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t *\t@returns {function} linkStateSetter(e)\n\t *\n\t *\t@example Update a \"text\" state value when an input changes:\n\t *\t\t<input onChange={ this.linkState('text') } />\n\t *\n\t *\t@example Set a deep state value on click\n\t *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t */\n\tlinkState(key, eventPath) {\n\t\tlet c = this._linkedStates || (this._linkedStates = {}),\n\t\t\tcacheKey = key + '|' + eventPath;\n\t\treturn c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t},\n\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t */\n\tsetState(state, callback) {\n\t\tlet s = this.state;\n\t\tif (!this.prevState) this.prevState = clone(s);\n\t\textend(s, isFunction(state) ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = (this._renderCallbacks || [])).push(callback);\n\t\ttriggerComponentRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n\t *\t@private\n\t */\n\tforceUpdate() {\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@param {object} context\t\tContext object (if a parent component has provided context)\n\t *\t@returns VNode\n\t */\n\trender() {\n\t\treturn null;\n\t}\n\n});\n","// render modes\n\nexport const NO_RENDER = 0;\nexport const SYNC_RENDER = 1;\nexport const FORCE_RENDER = 2;\nexport const ASYNC_RENDER = 3;\n\nexport const EMPTY = {};\n\nexport const ATTR_KEY = typeof Symbol!=='undefined' ? Symbol.for('preactattr') : '__preactattr_';\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const NON_DIMENSION_PROPS = {\n\tboxFlex:1, boxFlexGroup:1, columnCount:1, fillOpacity:1, flex:1, flexGrow:1,\n\tflexPositive:1, flexShrink:1, flexNegative:1, fontWeight:1, lineClamp:1, lineHeight:1,\n\topacity:1, order:1, orphans:1, strokeOpacity:1, widows:1, zIndex:1, zoom:1\n};\n\n// DOM event types that do not bubble and should be attached via useCapture\nexport const NON_BUBBLING_EVENTS = { blur:1, error:1, focus:1, load:1, resize:1, scroll:1 };\n","import { diff } from './vdom/diff';\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent);\n}\n"]}